plugins {
    id 'java'
}

group 'com.algopop'
version '0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    implementation 'com.amazonaws:aws-lambda-java-events:3.10.0'
    implementation platform('software.amazon.awssdk:bom:2.17.113')
    implementation 'software.amazon.awssdk:dynamodb'
    implementation 'org.mongodb:mongodb-driver-sync:4.4.2'
    implementation 'com.google.code.gson:gson:2.8.9'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

build {
    dependsOn buildZip
}

task createApi(type: Exec) {
    workingDir './aws'
    commandLine 'cmd', '/c', 'create-api.bat'
}

task createDynamoDbTable(type: Exec) {
    workingDir './aws'
    commandLine 'cmd', '/c', 'create-dynamodbtable.bat'
}

task createGetWidgetListLambda(type: Exec) {
    dependsOn buildZip
    // TODO: depend on test task and abandon if tests don't pass
    // TODO: parameterize zip file name in batch file
    workingDir './aws'
    commandLine 'cmd', '/c', 'create-getwidgetlist-lambda.bat'
}

task deployGetWidgetListLambda(type: Exec) {
    dependsOn buildZip
    // TODO: depend on test task and abandon if tests don't pass
    // TODO: parameterize zip file name in batch file
    workingDir './aws'
    commandLine 'cmd', '/c', 'deploy-lambda.bat "GetWidgetList"' 
}

task createGetWidgetLambda(type: Exec) {
    dependsOn buildZip
    // TODO: depend on test task and abandon if tests don't pass
    // TODO: parameterize zip file name in batch file
    workingDir './aws'
    commandLine 'cmd', '/c', 'create-getwidget-lambda.bat'
}

task deployGetWidgetLambda(type: Exec) {
    dependsOn buildZip
    // TODO: depend on test task and abandon if tests don't pass
    // TODO: parameterize zip file name in batch file
    workingDir './aws'
    commandLine 'cmd', '/c', 'deploy-lambda.bat "GetWidget"' 
}

task createCreateWidgetLambda(type: Exec) {
    dependsOn buildZip
    // TODO: depend on test task and abandon if tests don't pass
    // TODO: parameterize zip file name in batch file
    workingDir './aws'
    commandLine 'cmd', '/c', 'create-createwidget-lambda.bat'
}

task deployCreateWidgetLambda(type: Exec) {
    dependsOn buildZip
    // TODO: depend on test task and abandon if tests don't pass
    // TODO: parameterize zip file name in batch file
    workingDir './aws'
    commandLine 'cmd', '/c', 'deploy-lambda.bat "CreateWidget"' 
}

task createUpdateWidgetLambda(type: Exec) {
    dependsOn buildZip
    // TODO: depend on test task and abandon if tests don't pass
    // TODO: parameterize zip file name in batch file
    workingDir './aws'
    commandLine 'cmd', '/c', 'create-updatewidget-lambda.bat'
}

task deployUpdateWidgetLambda(type: Exec) {
    dependsOn buildZip
    // TODO: depend on test task and abandon if tests don't pass
    // TODO: parameterize zip file name in batch file
    workingDir './aws'
    commandLine 'cmd', '/c', 'deploy-lambda.bat "UpdateWidget"' 
}

task createDeleteWidgetLambda(type: Exec) {
    dependsOn buildZip
    // TODO: depend on test task and abandon if tests don't pass
    // TODO: parameterize zip file name in batch file
    workingDir './aws'
    commandLine 'cmd', '/c', 'create-deletewidget-lambda.bat'
}

task deployDeleteWidgetLambda(type: Exec) {
    dependsOn buildZip
    // TODO: depend on test task and abandon if tests don't pass
    // TODO: parameterize zip file name in batch file
    workingDir './aws'
    commandLine 'cmd', '/c', 'deploy-lambda.bat "DeleteWidget"' 
}

task testDeployLambda(type: Exec) {
    dependsOn buildZip
    workingDir './build/distributions'
    commandLine 'cmd', '/c', 'aws lambda update-function-code --function-name GetWidgets --zip-file fileb://aws-crud-0.1-SNAPSHOT.zip'
}
